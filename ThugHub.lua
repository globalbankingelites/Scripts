do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==5) then v16=nil;v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then v28=v1(v4(v29,1,1));return "";else local v81=v3(v1(v29,16));if v28 then local v98=v6(v81,v28);v28=nil;return v98;else return v81;end end end);local function v30(v31,v32,v33)if v33 then local v82=(v31/(2^(v32-(1 -(1246 -(1175 + 71))))))%((7 -5)^(((v33-(2 -1)) -(v32-(1 + 0))) + (1 -0))) ;return v82-(v82%(1 -0)) ;else local v83=0 + 0 ;local v84;while true do if (v83==(970 -(346 + 340 + 284))) then v84=(2 + 0)^(v32-(174 -(92 + 81))) ;return (((v31%(v84 + v84))>=v84) and (3 -2)) or (0 + 0) ;end end end end local function v34()local v47=v2(v25,v27,v27);v27=v27 + 1 ;return v47;end local function v35()local v48,v49=v2(v25,v27,v27 + (4 -2) );v27=v27 + 1 + 1 ;return (v49 * 256) + v48 ;end local function v36()local v50=0 -0 ;local v51;local v52;local v53;local v54;while true do if (v50==(0 -0)) then v51,v52,v53,v54=v2(v25,v27,v27 + (1434 -(539 + 892)) );v27=v27 + (4 -0) ;v50=1 + 0 ;end if (v50==1) then return (v54 * (7853306 + 8923910)) + (v53 * (94292 -(27716 + 1040))) + (v52 * (139 + 117)) + v51 ;end end end local function v37()local v55=v36();local v56=v36();local v57=1 + 0 ;local v58=(v30(v56,(1061 -(287 + 772)) -1 ,65 -45 ) * (2^(30 + 2 + 0))) + v55 ;local v59=v30(v56,(2032 -(1120 + 823)) -68 ,113 -82 );local v60=((v30(v56,58 -(12 + 14) )==(1 + 0)) and  -(412 -((410 -(219 + 163)) + 383))) or (204 -(120 + 83)) ;if (v59==(859 -(203 + 656))) then if (v58==(76 -(30 + 46))) then return v60 * (0 + 0) ;else local v99=0 -(1851 -(852 + 999)) ;while true do if ((0 -(1173 -(415 + 758)))==v99) then v59=1 -0 ;v57=0 + 0 ;break;end end end elseif (v59==(2692 -(463 + 182))) then return ((v58==0) and (v60 * ((1 + 0)/(0 + 0)))) or (v60 * NaN) ;end return v9(v60,v59-(1859 -(392 + 444)) ) * (v57 + (v58/((5 -3)^(704 -(380 + 272))))) ;end local function v38(v39)local v61=0;local v62;local v63;while true do if ((62 -(29 + 22 + 8))==v61) then return v7(v63);end if (v61==(3 -1)) then v63={};for v100=1 + 0 , #v62 do v63[v100]=v3(v2(v4(v62,v100,v100)));end v61=3 + 0 ;end if (v61==(1 + 0)) then v62=v4(v25,v27,(v27 + v39) -1 );v27=v27 + v39 ;v61=2;end if (v61==(1279 -(535 + 744))) then v62=nil;if  not v39 then local v102=0 + 0 ;while true do if (v102==(1055 -(829 + 226))) then v39=v36();if (v39==(0 + 0)) then return "";end break;end end end v61=253 -((398 -250) + 104) ;end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v64=0 + 0 ;local v65;local v66;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v64~=(3 + 1)) then else while true do if (v65~=3) then else v72=nil;while true do local v110=0;while true do if (v110~=1) then else if ((911 -(729 + 181))~=v66) then else local v111=0;while true do if (v111==(1 + 0)) then v72={};v66=2;break;end if (v111~=(463 -(217 + 246))) then else v70={v67,v68,nil,v69};v71=v36();v111=1 + 0 ;end end end if (v66~=(6 -4)) then else local v112=0;while true do if (v112==0) then for v126=1 + 0 ,v71 do local v127=583 -(418 + 165) ;local v128;local v129;local v130;local v131;while true do if (v127==(1 + 0)) then v130=nil;v131=nil;v127=2;end if (v127==(0 -0)) then v128=791 -(675 + 116) ;v129=nil;v127=1;end if (v127~=(3 -1)) then else while true do if (v128==(509 -(150 + 358))) then v131=nil;while true do if (v129~=0) then else local v232=0 + 0 ;local v233;while true do if (v232==(0 -0)) then v233=0;while true do if (v233==0) then local v260=0;local v261;while true do if (v260==0) then v261=0 -0 ;while true do if (v261~=1) then else v233=1628 -(1269 + 358) ;break;end if (v261~=(0 -0)) then else local v281=0;while true do if ((405 -(183 + 221))==v281) then v261=1 + 0 ;break;end if (v281~=(1857 -(511 + 1346))) then else v130=v34();v131=nil;v281=1 + 0 ;end end end end break;end end end if (v233~=1) then else v129=2 -1 ;break;end end break;end end end if (v129==(1 + 0)) then if (v130==1) then v131=v34()~=(1828 -(728 + 1100)) ;elseif (v130==(1 + 1)) then v131=v37();elseif (v130==3) then v131=v38();end v72[v126]=v131;break;end end break;end if (v128==0) then local v207=0 -0 ;while true do if (0~=v207) then else v129=0;v130=nil;v207=1;end if (v207~=(2 -1)) then else v128=1 + 0 ;break;end end end end break;end end end v70[3]=v34();v112=744 -(42 + 701) ;end if (v112==1) then for v132=1677 -(721 + 955) ,v36() do local v133=0;local v134;while true do if (v133==(0 + 0)) then v134=v34();if (v30(v134,982 -(44 + 937) ,1)~=(0 + 0)) then else local v202=1297 -(675 + 622) ;local v203;local v204;local v205;local v206;while true do if (v202~=1) then else v205=nil;v206=nil;v202=2;end if (v202~=(1625 -(582 + 1043))) then else v203=0;v204=nil;v202=2 -1 ;end if (v202~=2) then else while true do if (v203==(1 + 1)) then local v246=882 -(75 + 807) ;local v247;while true do if (v246==(0 + 0)) then v247=0;while true do if ((1 + 0)==v247) then v203=3;break;end if (v247~=0) then else local v268=0;while true do if ((3 -2)~=v268) then else v247=1;break;end if (v268~=(1413 -(973 + 440))) then else if (v30(v205,1 + 0 ,1140 -(977 + 162) )==1) then v206[8 -6 ]=v72[v206[2]];end if (v30(v205,2 + 0 ,8 -6 )==(1 + 0)) then v206[3]=v72[v206[4 -1 ]];end v268=1 + 0 ;end end end end break;end end end if (v203~=3) then else if (v30(v205,2 + 1 ,3)~=(949 -(354 + 594))) then else v206[4]=v72[v206[5 -1 ]];end v67[v132]=v206;break;end if (v203==1) then local v249=0;while true do if (v249~=(1 + 0)) then else v203=2;break;end if (v249==(0 -0)) then local v259=0 + 0 ;while true do if (v259==(301 -(89 + 211))) then v249=1 + 0 ;break;end if (v259~=0) then else v206={v35(),v35(),nil,nil};if (v204==0) then local v276=0 + 0 ;local v277;local v278;local v279;while true do if (v276~=1) then else v279=nil;while true do if (v277~=(0 -0)) then else v278=0;v279=nil;v277=4 -3 ;end if (v277~=(1 -0)) then else while true do if (v278==0) then v279=0 + 0 ;while true do if (v279~=(0 + 0)) then else v206[2 + 1 ]=v35();v206[3 + 1 ]=v35();break;end end break;end end break;end end break;end if (v276~=(0 -0)) then else v277=0 -0 ;v278=nil;v276=4 -3 ;end end elseif (v204==(1 -0)) then v206[593 -(307 + 283) ]=v36();elseif (v204==(1835 -(415 + 1418))) then v206[661 -(242 + 416) ]=v36() -(2^16) ;elseif (v204~=3) then else local v288=0 -0 ;local v289;local v290;while true do if (v288==(0 -0)) then v289=0;v290=nil;v288=1;end if (v288==1) then while true do if (v289~=0) then else v290=328 -(312 + 16) ;while true do if (v290==(0 -0)) then v206[3]=v36() -(2^(34 -18)) ;v206[1709 -(1439 + 266) ]=v35();break;end end break;end end break;end end end v259=1 + 0 ;end end end end end if (v203~=(0 -0)) then else local v250=0 + 0 ;local v251;while true do if ((162 -(42 + 120))==v250) then v251=0 + 0 ;while true do if (v251~=1) then else v203=4 -3 ;break;end if (v251==0) then v204=v30(v134,2,3);v205=v30(v134,4,4 + 2 );v251=1 + 0 ;end end break;end end end end break;end end end break;end end end v66=3;break;end end end break;end if (v110~=0) then else if (v66==(0 -0)) then local v113=0;while true do if (v113~=1) then else v69={};v66=1;break;end if (v113==(0 + 0)) then v67={};v68={};v113=784 -(327 + 456) ;end end end if (v66~=(1846 -(1090 + 753))) then else local v114=0 + 0 ;while true do if (v114==(1 -0)) then return v70;end if (0==v114) then for v135=1,v36() do v68[v135-1 ]=v42();end for v137=1008 -(562 + 445) ,v36() do v69[v137]=v36();end v114=1;end end end v110=1;end end end break;end if (2==v65) then local v107=0;while true do if (v107~=(1967 -(478 + 1488))) then else v65=1 + 2 ;break;end if (v107==0) then v70=nil;v71=nil;v107=2 -1 ;end end end if (v65==1) then v68=nil;v69=nil;v65=2;end if (v65~=0) then else v66=0 -0 ;v67=nil;v65=3 -2 ;end end break;end if (v64~=2) then else v69=nil;v70=nil;v64=3;end if ((1415 -(280 + 1135))==v64) then v65=0 + 0 ;v66=nil;v64=171 -(104 + 66) ;end if (v64~=(1890 -(1703 + 186))) then else v67=nil;v68=nil;v64=290 -(112 + 176) ;end if (3~=v64) then else v71=nil;v72=nil;v64=1 + 3 ;end end end local function v43(v44,v45,v46)local v73=v44[1];local v74=v44[2];local v75=v44[3];return function(...)local v76=1;local v77= -1;local v78={...};local v79=v13("#",...) -1 ;local function v80()local v85=v73;local v86=v74;local v87=v75;local v88=v41;local v89={};local v90={};local v91={};for v95=0 + 0 ,v79 do if (((2491 -(236 + 1300))<=1237) and (v95>=v87)) then v89[v95-v87 ]=v78[v95 + 1 + 0 ];else v91[v95]=v78[v95 + 1 ];end end local v92=(v79-v87) + 1 + 0 ;local v93;local v94;while true do local v96=1888 -(1094 + 794) ;while true do if (((1693 + 1410)<(4018 + 403)) and (1==v96)) then if (((2683 + 227)<=((1989 -1432) + 3807)) and (v94<=(516 -(454 + 50)))) then if ((v94<=(13 -(1033 -(504 + 521)))) or ((3103 -1390)==((9758 + 653) -6401))) then if ((v94<=(288 -(233 + 53))) or ((2315 -(112 + 1440))>=(884 + 1035))) then if (((1818 + 131)<=(3821 -(654 + 398))) and (v94<=(0 -0))) then v91[v93[2 + 0 ]]=v93[4 -(1095 -(1068 + 26)) ]~=(0 -0) ;elseif (((2232 -(12 + 73))>=(152 + 2)) and (v94==1)) then local v139=0 -0 ;local v140;while true do if ((v139==(0 + 0)) or (((848 + 2945) -(7281 -5488))==(1310 -(356 + 452)))) then v140=v93[2];v91[v140](v14(v91,v140 + 1 + 0 ,v93[7 -4 ]));break;end end else local v141=544 -(7 + 537) ;local v142;local v143;local v144;while true do if (((824 -(780 + 19 + 24))==v141) or ((3190 -(14 + 2))<=(2505 -1767))) then v144=nil;while true do if ((v142==(1906 -(1561 + 345))) or ((706 -(196 + 64))<=(519 -295))) then local v208=0 -0 ;while true do if (((441 + 915)<(7905 -5022)) and (v208==(1577 -(1237 + (862 -522))))) then v143=364 -((870 -586) + 80) ;v144=nil;v208=(695 -(69 + 402)) -(102 + 117 + (6 -2)) ;end if ((v208==1) or (((4138 -(1015 + 445)) -(137 + 333))==3465)) then v142=1 -0 ;break;end end end if (((1 + 0)==v142) or ((1306 -(985 + 206))==(3104 -(2069 -(51 + 958))))) then while true do if ((v143==(0 + 0)) or ((4719 -((1028 -412) + 105))<=(659 + 2434))) then v144=v93[2 + 0 + 0 ];v91[v144]=v91[v144](v14(v91,v144 + 1 + 0 ,v93[1 + 0 + 1 + 1 ]));break;end end break;end end break;end if ((v141==0) or ((135 + 1304)>3149)) then v142=0;v143=nil;v141=1 + 0 ;end end end elseif ((3024==(4207 -(154 + 1029))) and (v94<=(2 + 1))) then v91[v93[4 -2 ]]();elseif (((5706 -2246)>(252 + 19)) and (v94==4)) then local v145=1150 -(633 + 517) ;local v146;local v147;local v148;local v149;local v150;while true do if (((0 -0)==v145) or ((3059 -(21 + 144))<(1399 + 1150))) then v146=0 -0 ;v147=nil;v145=1;end if ((v145==(8 -(844 -(134 + 704)))) or ((101 + 134)>(883 -(157 + 26)))) then v150=nil;while true do if (((2878 -1001)<(2612 + 1024)) and (v146==(1 + 0 + 0))) then v77=(v149 + v147) -((3342 -1401) -(1476 + 464)) ;v150=1420 -(511 + 909) ;v146=2;end if (((1199 + 1639)<=3279) and (v146==(6 -4))) then for v217=v147,v77 do local v218=0;local v219;local v220;while true do if ((906==((142 + 1417) -653)) and (v218==(178 -((453 -298) + 22)))) then while true do if ((v219==(0 -0)) or ((6088 -4648)>=(17285 -(43320 -30293)))) then v220=0 + 0 + 0 ;while true do if ((v220==(0 + 0)) or (4680<=(3610 -2643))) then v150=v150 + (2 -1) ;v91[v217]=v148[v150];break;end end break;end end break;end if ((v218==(0 -(0 -0))) or ((2162 -(1738 + 96 + 48))<(955 -(681 + 200)))) then v219=0 + 0 ;v220=nil;v218=1 + 0 ;end end end break;end if (((2427 -1723)<=(3316 -2248)) and ((0 + 0 + 0)==v146)) then v147=v93[2];v148,v149=v88(v91[v147](v14(v91,v147 + 1 ,v93[1 + 2 ])));v146=1;end end break;end if ((412<=(64 + 4063)) and (v145==1)) then v148=nil;v149=nil;v145=543 -(109 + 432) ;end end else v91[v93[1022 -(117 + (1786 -883)) ]]=v91[v93[(8 -2) -3 ]][v93[16 -12 ]];end elseif ((v94<=(2 + 6)) or (2477>3823)) then if (((1816 -(410 + 36))==(2505 -(457 + 678))) and (v94<=(18 -12))) then local v116=0;local v117;local v118;local v119;while true do if ((1885==(7770 -5885)) and (v116==0)) then v117=0;v118=nil;v116=(5 -3) -1 ;end if (((4762 -(114 + (842 -(8 + 26))))>(2871 -(386 + 140))) and (v116==1)) then v119=nil;while true do if ((v117==0) or ((1670 -(300 + 130))==(2287 + 990))) then local v191=0;local v192;while true do if ((v191==(0 -0)) or ((1301 + 1796)>(1716 + 2511))) then v192=0;while true do if ((v192==(539 -(193 + 345))) or ((2877 -1597)==(10519 -8178))) then v117=1 -0 ;break;end if (((662 -((150 -99) + 611))==v192) or (130<(243 -180))) then v118=v93[712 -(605 + 105) ];v119=v91[v93[7 -4 ]];v192=3 -2 ;end end break;end end end if (((2512 -1714)<(3679 + 1190)) and (v117==(2 -1))) then v91[v118 + (414 -(159 + 254)) ]=v119;v91[v118]=v119[v93[158 -(5 + 149) ]];break;end end break;end end elseif ((v94>(1782 -(344 + 1431))) or ((204 -100)>=(609 + 648))) then for v183=v93[2],v93[247 -(21 + 223) ] do v91[v183]=nil;end else v91[v93[550 -(481 + 67) ]]=v45[v93[8 -5 ]];end elseif ((v94<=(955 -(456 + 489))) or ((553 + 213)<=(502 -242))) then if ((v94>(1 + (605 -(94 + 503)))) or ((17697 -12815)<=(10031 -5743))) then local v155=0 + 0 ;local v156;local v157;while true do if (((606 + 3961)<(6083 -(133 + (1502 -(176 + 287))))) and (v155==1)) then while true do if ((v156==(0 -0)) or ((8041 -3990)>(6057 -(871 + 980)))) then v157=v93[923 -(246 + 675) ];v91[v157]=v91[v157](v91[v157 + 1 + 0 ]);break;end end break;end if (((1155 + 2844)<=(10816 -(6819 -(62 + 228)))) and (v155==(0 -0))) then v156=0;v157=nil;v155=1 + 0 ;end end else v91[v93[2]][v93[12 -9 ]]=v91[v93[(1321 -(345 + 384)) -((1020 -440) + 8) ]];end elseif (((4247 -1893)>1478) and (v94>(8 + 3))) then v91[v93[1459 -((2055 -(570 + 1136)) + 1108) ]][v93[3]]=v93[(869 -(628 + 132)) -(43 + 62) ];elseif ((2630>=(2883 -(1223 + 77))) and (v91[v93[1162 -((112 -55) + 1103) ]]==v93[11 -(4 + 3) ])) then v76=v76 + 1 + 0 ;else v76=v93[3];end elseif (((6876 -5379)==(1268 + 111 + 118)) and (v94<=(17 + 1))) then if (((5261 -(772 + 220))>(461 + 2920)) and (v94<=((56 -17) -24))) then if ((v94<=(11 + 2)) or ((4474 -((442 -261) + (912 -685)))>(11194 -6257))) then if ((v91[v93[1124 -(638 + 484) ]]==v91[v93[15 -11 ]]) or (1776>(2258 -(46 + (268 -(82 + 174)))))) then v76=v76 + (735 -(183 + 551)) + 0 ;else v76=v93[1421 -(1122 + 296) ];end elseif ((v94>((716 + 70) -((652 -385) + 505))) or ((5375 -(80 + 321))<=((794 + 925) -(1063 + 105)))) then v76=v93[7 -4 ];else local v164=0 -0 ;local v165;local v166;local v167;while true do if ((v164==(1321 -(109 + (3650 -2439)))) or (234>(2102 + 284))) then v167=nil;while true do if (((4663 + 24)==(15292 -10605)) and (v165==0)) then local v212=1070 -(722 + (1715 -(489 + 878))) ;while true do if (((1 + 0)==v212) or ((1196 -300)<=((2230 -845) -753))) then v165=619 -(127 + (2190 -(1663 + 36))) ;break;end if ((v212==(0 -0)) or ((2183 + 925 + 1216)==(605 + 1476))) then v166=112 -(1 + 3 + 108) ;v167=nil;v212=1;end end end if ((((4862 -3157) + 898)<=3351) and (v165==(1 + 0))) then while true do if ((0==v166) or ((2905 + 197)<=(1151 + 366))) then v167=v93[7 -5 ];v91[v167]=v91[v167](v14(v91,v167 + 1 + 0 ,v77));break;end end break;end end break;end if ((v164==(0 + 0)) or ((2891 -(1271 + 426))==(5709 -(739 + 88)))) then v165=0;v166=nil;v164=2 -1 ;end end end elseif (((16592 -12317)==(638 + 3637)) and (v94<=(2 + 14))) then local v120=0 + 0 ;local v121;local v122;local v123;while true do if (((8527 -5484)>(848 -(421 + (1546 -1157)))) and (v120==(2 -1))) then v123=nil;while true do if (((70 + 3146)<=(4889 -(682 + 335))) and (v121==1)) then while true do if ((v122==0) or (((7951 + 1127) -4316)<(13121 -8685))) then v123=v93[2];v91[v123](v91[v123 + 1 ]);break;end end break;end if ((v121==(0 -0)) or ((1670 + 1134)<=1932)) then local v196=0;while true do if (((4977 -(45 + 24 + 5))==(2399 + 2504)) and (v196==(2 -1))) then v121=3 -(1 + 1) ;break;end if (((0 -0)==v196) or ((3947 -(586 + 130))<=(1705 + 406))) then v122=0 -0 ;v123=nil;v196=1;end end end end break;end if (((2198 + 1708 + 112)==(10847 -6829)) and (v120==(0 -0))) then v121=1847 -(1569 + 278) ;v122=nil;v120=1 + 0 ;end end elseif ((v94==(1706 -(1253 + 436))) or (2575>=(4705 -(1069 + 699)))) then local v168=1955 -(737 + 1218) ;local v169;local v170;local v171;while true do if ((v168==(4 -2)) or ((3978 -2571)<(2222 -925))) then for v197=2 -1 ,v93[3 + 1 ] do local v198=(0 -0) + (394 -(336 + 58)) ;local v199;local v200;local v201;while true do if ((v198==(1 + 0)) or ((1373 + 1062)<(4375 -(7564 -5571)))) then v201=nil;while true do if (((2998 -(830 + 240))>=(39 + 364)) and (v199==(643 -(70 + 572)))) then while true do if ((v200==1) or (((1999 -(1611 + 346)) + 289)>(89 + 283))) then if (((19029 -(7042 + 7416))>=(3495 -(221 + 273))) and (v201[1 -0 ]==(97 -75))) then v171[v197-1 ]={v91,v201[3]};else v171[v197-(1714 -(853 + 860)) ]={v45,v201[4 -1 ]};end v90[ #v90 + 1 + 0 ]=v171;break;end if (((2668 -((1533 -(218 + 416)) + 1081))<=(4635 -(493 + 852))) and (v200==(671 -(152 + 519)))) then local v256=(0 -0) -0 ;local v257;while true do if (((765 + 2388)<=4689) and (v256==((2240 -1376) -(16 + 848)))) then v257=0;while true do if ((v257==((1 + 0) -0)) or ((5635 -(1080 + 26))>(12055 -7367))) then v200=417 -(172 + 244) ;break;end if ((3720<=(5554 -((989 -(564 + 267)) + 398))) and ((0 + 0)==v257)) then v76=v76 + ((1508 -1035) -(370 + 102)) ;v201=v85[v76];v257=846 -(452 + 393) ;end end break;end end end end break;end if ((v199==(1407 -(1184 + 223))) or ((477 + 762)<(1259 -(199 + 738)))) then local v242=0 + 0 ;while true do if ((((1525 -(5 + 69)) -(455 + 996))==v242) or ((16399 -12945)==(5196 -(6629 -4016)))) then v200=0;v201=nil;v242=1;end if (((17256 -12606)==(6266 -(1518 + 98))) and ((1 -0)==v242)) then v199=1 -0 ;break;end end end end break;end if ((v198==(0 -0)) or ((19914 -15521)<=3200)) then v199=0 + 0 ;v200=nil;v198=813 -(519 + 293) ;end end end v91[v93[(478 -(34 + 442)) + 0 ]]=v43(v169,v170,v46);break;end if ((v168==(1386 -(1031 + 355))) or (((2768 -(363 + 1570)) + 2153)==2932)) then v169=v86[v93[10 -7 ]];v170=nil;v168=1;end if ((v168==(1 + 0)) or ((1784 -(964 + 188))>(10190 -7064))) then local v190=0;while true do if ((v190==(2 -1)) or ((3192 -1294)<(533 + 921))) then v168=1713 -(1156 + 555) ;break;end if ((v190==(0 + 0)) or ((882 + (420 -169))==(309 + 3141))) then v171={};v170=v11({},{__index=function(v213,v214)local v222=216 -(208 + 8) ;local v223;local v224;while true do if ((v222==(0 -0)) or (((6815 -3820) -(150 + 301))>=(6184 -(343 + 1046)))) then local v243=0 + 0 ;while true do if ((v243==(0 -0)) or ((10434 -7333)<1929)) then v223=0 -0 ;v224=nil;v243=(1 + 0) -0 ;end if (((1265 -(66 + 515))<=(8518 -5899)) and (v243==(1861 -(658 + 1202)))) then v222=1 -0 ;break;end end end if ((v222==(1 + (166 -(96 + 70)))) or ((6108 -(1279 + 545))>=4569)) then while true do if ((v223==(0 + 0)) or ((8493 -3554)<(3481 -(1006 + 127)))) then local v258=0 -0 ;while true do if ((((5308 -2872) -(1166 -(215 + 279)))>=(860 -(153 + 95))) and (v258==0)) then v224=v171[v214];return v224[(355 -(157 + 196)) -1 ][v224[1461 -(206 + 1253) ]];end end end end break;end end end,__newindex=function(v213,v214,v215)local v225=0;local v226;while true do if ((v225==((0 -0) -0)) or ((5691 -(467 + 662))<=(5805 -(570 + 695)))) then v226=v171[v214];v226[963 -(778 + 184) ][v226[2 + (0 -0) ]]=v215;break;end end end});v190=1 -0 ;end end end end elseif (((748 + 88)==(449 + 387)) and (v93[1060 -(877 + 181) ]==v91[v93[7 -3 ]])) then v76=v76 + 1 + 0 ;else v76=v93[485 -(14 + 468) ];end elseif ((v94<=(757 -(686 + 7 + 43))) or ((7545 -5759)>=(3037 -972))) then if ((v94<=(72 -53)) or (487>=(300 + 837))) then v91[v93[1002 -(625 + 375) ]]=v43(v86[v93[3]],nil,v46);elseif (((2178 -(11 + 166 + 1533))<(878 + 2823)) and (v94>(19 + 1))) then do return;end else local v172=165 -(123 + 42) ;local v173;local v174;local v175;while true do if (((1591 -984)<(2717 -(73 + 1330))) and (v172==(562 -(127 + 434)))) then v175=nil;while true do if ((3638>=(2981 -1106)) and (v173==(3 -2))) then for v227=1 + 0 , #v90 do local v228=871 -(370 + 501) ;local v229;local v230;local v231;while true do if ((4740>=(546 + 393)) and (v228==(0 -0))) then v229=0;v230=nil;v228=1 + 0 ;end if ((v228==(1061 -(991 + 69))) or ((7494 -3807)<(2439 -862))) then v231=nil;while true do if ((v229==((0 -0) -0)) or (3022<=(1131 + 3))) then v230=420 -(235 + 185) ;v231=nil;v229=1;end if (((1904 -1204)<=(587 + 3783)) and (v229==1)) then while true do if ((v230==0) or (1543>=(4128 -(693 + 439)))) then v231=v90[v227];for v269=0 + 0 , #v231 do local v270=0 + (1980 -(1355 + 625)) ;local v271;local v272;local v273;local v274;local v275;while true do if ((v270==1) or ((20 + 188)>((9741 -6867) -1365))) then v273=nil;v274=nil;v270=2 + 0 ;end if (((1590 + 3209)>=(5249 -2861)) and (0==v270)) then v271=0 -0 ;v272=nil;v270=1 + 0 ;end if (((3 -1)==v270) or ((3803 -(949 + 774))>=(8115 -4929))) then v275=nil;while true do if ((v271==(350 -(206 + 142))) or ((6869 -3766)<(756 + 429))) then while true do if (((89 -(19 + 70))==v272) or ((2086 + 281)>(2233 + 493 + 1930))) then local v291=203 -((1012 -(514 + 389)) + 94) ;local v292;while true do if ((v291==(0 -0)) or (453==204)) then v292=0;while true do if (((5862 -(559 + 316))==(6833 -(474 + 1372))) and (v292==(207 -(61 + 146)))) then local v298=0;while true do if ((v298==(0 + 0)) or ((1909 -(124 + (42 -32)))==(4982 -(553 + 259)))) then v273=v231[v269];v274=v273[3 -2 ];v298=1 + 0 ;end if (((5461 -2426)>=(389 -245)) and (1==v298)) then v292=1 + 0 ;break;end end end if (((4692 -(364 + 1347))>(1179 -770)) and (v292==(781 -(63 + 717)))) then v272=1 + 0 ;break;end end break;end end end if (((4134 -(374 + 1906))<2577) and (v272==(2 -1))) then v275=v273[(585 -(291 + 293)) + 1 ];if (((6534 -(865 + 984))==(1396 + 3289)) and (v274==v91) and (v275>=v174)) then local v294=0;local v295;while true do if ((4466<(6460 -(1132 + 475))) and (v294==(722 -(516 + 206)))) then v295=0 + 0 ;while true do if (((1176 -(789 + (1018 -(47 + 795))))<=(2264 -(39 + 217))) and (v295==(1768 -(1701 + 67)))) then v175[v275]=v274[v275];v273[1]=v175;break;end end break;end end end break;end end break;end if ((v271==0) or ((4708 -(133 + 666))<=3105)) then v272=0 + 0 ;v273=nil;v271=4 -3 ;end if ((v271==((410 + 39) -(302 + 146))) or ((1087 + 496)>=(455 + 3355))) then v274=nil;v275=nil;v271=551 -(17 + (835 -303)) ;end end break;end end end break;end end break;end end break;end end end break;end if ((0==v173) or ((2408 + 786)<(1993 + 831))) then local v216=1113 -(921 + 192) ;while true do if ((v216==(1 + 0)) or ((908 -653)==3106)) then v173=185 -(117 + 49 + 18) ;break;end if ((v216==(0 -(0 + 0))) or ((5237 -3545)>=(5462 -(428 + 165)))) then local v239=0 + 0 ;while true do if ((v239==(1 + 0)) or ((3105 + 545)>=(5087 -(300 + 987)))) then v216=589 -(109 + 78 + 401) ;break;end if (((4042 -(4 + 12))<=(12014 -7544)) and (v239==(0 -0))) then v174=v93[4 -(1 + 1) ];v175={};v239=664 -(444 + 219) ;end end end end end end break;end if (((5226 -(154 + 1156))>(627 + 1036)) and (v172==(0 + 0))) then v173=1206 -(1020 + 186) ;v174=nil;v172=96 -(50 + 45) ;end end end elseif ((v94<=23) or ((2495 -(276 + 464))>(7483 -5167))) then if (((2523 + 1908)>1740) and (v94>(1175 -(175 + 978)))) then v91[v93[210 -(133 + 75) ]]={};else v91[v93[2]]=v91[v93[13 -10 ]];end elseif ((v94==(82 -58)) or ((902 -241)>=(1803 + 580))) then v91[v93[1012 -(154 + 856) ]]=v46[v93[8 -5 ]];else v91[v93[2 + 0 ]]=v93[3];end v76=v76 + ((1165 + 618) -(193 + 1589)) ;break;end if ((v96==0) or ((424 -(12 + 12 + 21))>=(6391 -(1489 + 126)))) then v93=v85[v76];v94=v93[1 + 0 ];v96=1728 -(1474 + 253) ;end end end end A,B=v41(v12(v80));if  not A[1] then local v97=v44[4][v76] or "?" ;error("Script error at ["   .. v97   .. "]:"   .. A[2] );else return v14(A,2,B);end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end
